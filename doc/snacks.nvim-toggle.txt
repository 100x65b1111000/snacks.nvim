*snacks.nvim-toggle.txt*        For Neovim       Last change: 2024 November 05

==============================================================================
Table of Contents                       *snacks.nvim-toggle-table-of-contents*

1. toggle                                          |snacks.nvim-toggle-toggle|
  - Config                                  |snacks.nvim-toggle-toggle-config|
  - Types                                    |snacks.nvim-toggle-toggle-types|
  - Module                                  |snacks.nvim-toggle-toggle-module|

==============================================================================
1. toggle                                          *snacks.nvim-toggle-toggle*


CONFIG                                      *snacks.nvim-toggle-toggle-config*

>lua
    ---@class snacks.toggle.Config
    ---@field icon? string|{ enabled: string, disabled: string }
    ---@field color? string|{ enabled: string, disabled: string }
    {
      map = vim.keymap.set,
      which_key = true,
      notify = true,
      icon = {
        enabled = " ",
        disabled = " ",
      },
      color = {
        enabled = "green",
        disabled = "yellow",
      },
    }
<


TYPES                                        *snacks.nvim-toggle-toggle-types*

>lua
    ---@class snacks.toggle.Opts: snacks.toggle.Config
    ---@field name string
    ---@field get fun():boolean
    ---@field set fun(state:boolean)
<


MODULE                                      *snacks.nvim-toggle-toggle-module*

>lua
    ---@class snacks.toggle
    ---@field opts snacks.toggle.Opts
    Snacks.toggle = {}
<


SNACKS.TOGGLE() ~

>lua
    ---@type fun(... :snacks.toggle.Opts): snacks.toggle
    Snacks.toggle()
<


SNACKS.TOGGLE.DIAGNOSTICS() ~

>lua
    ---@param opts? snacks.toggle.Config
    Snacks.toggle.diagnostics(opts)
<


SNACKS.TOGGLE.INLAY_HINTS() ~

>lua
    ---@param opts? snacks.toggle.Config
    Snacks.toggle.inlay_hints(opts)
<


SNACKS.TOGGLE.LINE_NUMBER() ~

>lua
    ---@param opts? snacks.toggle.Config
    Snacks.toggle.line_number(opts)
<


SNACKS.TOGGLE.NEW() ~

>lua
    ---@param ... snacks.toggle.Opts
    ---@return snacks.toggle
    Snacks.toggle.new(...)
<


SNACKS.TOGGLE.OPTION() ~

>lua
    ---@param option string
    ---@param opts? snacks.toggle.Config | {on?: unknown, off?: unknown}
    Snacks.toggle.option(option, opts)
<


SNACKS.TOGGLE.TREESITTER() ~

>lua
    ---@param opts? snacks.toggle.Config
    Snacks.toggle.treesitter(opts)
<


TOGGLE:_WK() ~

>lua
    toggle:_wk(keys, mode)
<


TOGGLE:GET() ~

>lua
    toggle:get()
<


TOGGLE:MAP() ~

>lua
    ---@param keys string
    ---@param opts? vim.keymap.set.Opts | { mode: string|string[]}
    toggle:map(keys, opts)
<


TOGGLE:SET() ~

>lua
    ---@param state boolean
    toggle:set(state)
<


TOGGLE:TOGGLE() ~

>lua
    toggle:toggle()
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
