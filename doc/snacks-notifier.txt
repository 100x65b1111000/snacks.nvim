*snacks-notifier.txt*         For Neovim         Last change: 2024 November 06

==============================================================================
Table of Contents                          *snacks-notifier-table-of-contents*

1. Config                                             |snacks-notifier-config|
2. Types                                               |snacks-notifier-types|
3. Module                                             |snacks-notifier-module|
  - Snacks.notifier.new()       |snacks-notifier-module-snacks.notifier.new()|
  - notifier:add()                     |snacks-notifier-module-notifier:add()|
  - notifier:get_render()       |snacks-notifier-module-notifier:get_render()|
  - notifier:hide()                   |snacks-notifier-module-notifier:hide()|
  - notifier:init()                   |snacks-notifier-module-notifier:init()|
  - notifier:layout()               |snacks-notifier-module-notifier:layout()|
  - notifier:notify()               |snacks-notifier-module-notifier:notify()|
  - notifier:render()               |snacks-notifier-module-notifier:render()|
  - notifier:sort()                   |snacks-notifier-module-notifier:sort()|
  - notifier:start()                 |snacks-notifier-module-notifier:start()|
  - notifier:update()               |snacks-notifier-module-notifier:update()|

==============================================================================
1. Config                                             *snacks-notifier-config*

>lua
    ---@class snacks.notifier.Config
    ---@field keep? fun(notif: snacks.notifier.Notif): boolean
    {
      timeout = 3000,
      width = { min = 40, max = 0.4 },
      height = { min = 1, max = 0.6 },
      sort = { "level", "added" }, -- sort by level and time
      icons = {
        error = " ",
        warn = " ",
        info = " ",
        debug = " ",
        trace = " ",
      },
      ---@type snacks.notifier.style
      style = "compact",
    }
<


==============================================================================
2. Types                                               *snacks-notifier-types*

>lua
    ---@alias snacks.notifier.hl "title"|"icon"|"border"|"footer"|"msg"
<

>lua
    ---@class snacks.notifier.ctx
    ---@field opts snacks.win.Config
    ---@field notifier snacks.notifier
    ---@field hl table<snacks.notifier.hl, string>
    ---@field ns number
<

>lua
    ---@alias snacks.notifier.render fun(buf: number, notif: snacks.notifier.Notif, ctx: snacks.notifier.ctx)
<

Render styles: compact: simple border title with message fancy: similar to the
default nvim-notify style

>lua
    ---@alias snacks.notifier.style snacks.notifier.render|"compact"|"fancy"
<

>lua
    ---@class snacks.notifier.Notif.opts
    ---@field id? number|string
    ---@field msg? string
    ---@field level? number|snacks.notifier.level
    ---@field title? string
    ---@field icon? string
    ---@field timeout? number
    ---@field once? boolean
    ---@field ft? string
    ---@field keep? fun(notif: snacks.notifier.Notif): boolean
    ---@field style? snacks.notifier.style
<

>lua
    ---@class snacks.notifier.Notif: snacks.notifier.Notif.opts
    ---@field msg string
    ---@field id number|string
    ---@field win? snacks.win
    ---@field icon string
    ---@field level snacks.notifier.level
    ---@field timeout number
    ---@field dirty? boolean
    ---@field shown? number timestamp in ms
    ---@field added number timestamp in ms
    ---@field layout? { width: number, height: number, top?: number }
<


==============================================================================
3. Module                                             *snacks-notifier-module*

>lua
    ---@class snacks.notifier
    ---@field queue snacks.notifier.Notif[]
    ---@field opts snacks.notifier.Config
    ---@field dirty boolean
    Snacks.notifier = {}
<


SNACKS.NOTIFIER.NEW()           *snacks-notifier-module-snacks.notifier.new()*

>lua
    ---@param opts? snacks.notifier.Config
    ---@return snacks.notifier
    Snacks.notifier.new(opts)
<


NOTIFIER:ADD()                         *snacks-notifier-module-notifier:add()*

>lua
    ---@param opts snacks.notifier.Notif.opts
    notifier:add(opts)
<


NOTIFIER:GET_RENDER()           *snacks-notifier-module-notifier:get_render()*

>lua
    ---@param style? snacks.notifier.style
    ---@return snacks.notifier.render
    notifier:get_render(style)
<


NOTIFIER:HIDE()                       *snacks-notifier-module-notifier:hide()*

>lua
    ---@param id? number|string
    notifier:hide(id)
<


NOTIFIER:INIT()                       *snacks-notifier-module-notifier:init()*

>lua
    notifier:init()
<


NOTIFIER:LAYOUT()                   *snacks-notifier-module-notifier:layout()*

>lua
    notifier:layout()
<


NOTIFIER:NOTIFY()                   *snacks-notifier-module-notifier:notify()*

>lua
    ---@param msg string
    ---@param level? snacks.notifier.level|number
    ---@param opts? snacks.notifier.Notif.opts
    notifier:notify(msg, level, opts)
<


NOTIFIER:RENDER()                   *snacks-notifier-module-notifier:render()*

>lua
    ---@param notif snacks.notifier.Notif
    notifier:render(notif)
<


NOTIFIER:SORT()                       *snacks-notifier-module-notifier:sort()*

>lua
    notifier:sort()
<


NOTIFIER:START()                     *snacks-notifier-module-notifier:start()*

>lua
    notifier:start()
<


NOTIFIER:UPDATE()                   *snacks-notifier-module-notifier:update()*

>lua
    notifier:update()
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
