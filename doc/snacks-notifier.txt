*snacks-notifier.txt*         For Neovim         Last change: 2024 November 06

==============================================================================
Table of Contents                          *snacks-notifier-table-of-contents*

1. Config                                             |snacks-notifier-config|
2. Styles                                             |snacks-notifier-styles|
  - notification                         |snacks-notifier-styles-notification|
3. Types                                               |snacks-notifier-types|
  - Notifications                        |snacks-notifier-types-notifications|
  - Rendering                                |snacks-notifier-types-rendering|
4. Module                                             |snacks-notifier-module|
  - Snacks.notifier()               |snacks-notifier-module-snacks.notifier()|
  - Snacks.notifier.hide()     |snacks-notifier-module-snacks.notifier.hide()|
  - Snacks.notifier.notify() |snacks-notifier-module-snacks.notifier.notify()|

==============================================================================
1. Config                                             *snacks-notifier-config*

>lua
    ---@class snacks.notifier.Config
    ---@field keep? fun(notif: snacks.notifier.Notif): boolean
    {
      timeout = 3000, -- default timeout in ms
      width = { min = 40, max = 0.4 },
      height = { min = 1, max = 0.6 },
      -- editor margin to keep free. tabline and statusline are taken into account automatically
      margin = { top = 0, right = 1, bottom = 0 },
      padding = true, -- add 1 cell of left/right padding to the notification window
      sort = { "level", "added" }, -- sort by level and time
      icons = {
        error = " ",
        warn = " ",
        info = " ",
        debug = " ",
        trace = " ",
      },
      ---@type snacks.notifier.style
      style = "compact",
    }
<


==============================================================================
2. Styles                                             *snacks-notifier-styles*


NOTIFICATION                             *snacks-notifier-styles-notification*

>lua
    {
      border = "rounded",
      zindex = 100,
      wo = {
        winblend = 5,
        wrap = false,
      },
    }
<


==============================================================================
3. Types                                               *snacks-notifier-types*

Render styles: compact: use border for icon and title minimal: no border, only
icon and message fancy: similar to the default nvim-notify style

>lua
    ---@alias snacks.notifier.style snacks.notifier.render|"compact"|"fancy"|"minimal"
<


NOTIFICATIONS                            *snacks-notifier-types-notifications*

Notification options

>lua
    ---@class snacks.notifier.Notif.opts
    ---@field id? number|string
    ---@field msg? string
    ---@field level? number|snacks.notifier.level
    ---@field title? string
    ---@field icon? string
    ---@field timeout? number
    ---@field ft? string
    ---@field keep? fun(notif: snacks.notifier.Notif): boolean
    ---@field style? snacks.notifier.style
<

Notification object

>lua
    ---@class snacks.notifier.Notif: snacks.notifier.Notif.opts
    ---@field msg string
    ---@field id number|string
    ---@field win? snacks.win
    ---@field icon string
    ---@field level snacks.notifier.level
    ---@field timeout number
    ---@field dirty? boolean
    ---@field shown? number timestamp in ms
    ---@field added number timestamp in ms
    ---@field layout? { width: number, height: number, top?: number }
<


RENDERING                                    *snacks-notifier-types-rendering*

>lua
    ---@alias snacks.notifier.render fun(buf: number, notif: snacks.notifier.Notif, ctx: snacks.notifier.ctx)
<

>lua
    ---@class snacks.notifier.hl
    ---@field title string
    ---@field icon string
    ---@field border string
    ---@field footer string
    ---@field msg string
<

>lua
    ---@class snacks.notifier.ctx
    ---@field opts snacks.win.Config
    ---@field notifier snacks.notifier
    ---@field hl snacks.notifier.hl
    ---@field ns number
<


==============================================================================
4. Module                                             *snacks-notifier-module*


SNACKS.NOTIFIER()                   *snacks-notifier-module-snacks.notifier()*

>lua
    ---@type fun(msg: string, level?: snacks.notifier.level|number, opts?: snacks.notifier.Notif.opts): number|string
    Snacks.notifier()
<


SNACKS.NOTIFIER.HIDE()         *snacks-notifier-module-snacks.notifier.hide()*

>lua
    ---@param id? number|string
    Snacks.notifier.hide(id)
<


SNACKS.NOTIFIER.NOTIFY()     *snacks-notifier-module-snacks.notifier.notify()*

>lua
    ---@param msg string
    ---@param level? snacks.notifier.level|number
    ---@param opts? snacks.notifier.Notif.opts
    Snacks.notifier.notify(msg, level, opts)
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
