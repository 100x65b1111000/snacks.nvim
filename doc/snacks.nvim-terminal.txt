*snacks.nvim-terminal.txt*       For Neovim      Last change: 2024 November 05

==============================================================================
Table of Contents                     *snacks.nvim-terminal-table-of-contents*

1. terminal                                    |snacks.nvim-terminal-terminal|
  - Config                              |snacks.nvim-terminal-terminal-config|
  - Module                              |snacks.nvim-terminal-terminal-module|

==============================================================================
1. terminal                                    *snacks.nvim-terminal-terminal*


CONFIG                                  *snacks.nvim-terminal-terminal-config*

>lua
    ---@class snacks.terminal.Config
    ---@field cwd? string
    ---@field env? table<string, string>
    ---@field win? snacks.win.Config
    ---@field interactive? boolean
    ---@field override? fun(cmd?: string|string[], opts?: snacks.terminal.Config) Use this to use a different terminal implementation
    {
      win = {
        bo = {
          filetype = "snacks_terminal",
        },
        wo = {},
        keys = {
          gf = function(self)
            local f = vim.fn.findfile(vim.fn.expand("<cfile>"))
            if f ~= "" then
              vim.cmd("close")
              vim.cmd("e " .. f)
            end
          end,
          term_normal = {
            "<esc>",
            function(self)
              self.esc_timer = self.esc_timer or (vim.uv or vim.loop).new_timer()
              if self.esc_timer:is_active() then
                self.esc_timer:stop()
                vim.cmd("stopinsert")
              else
                self.esc_timer:start(200, 0, function() end)
                return "<esc>"
              end
            end,
            mode = "t",
            expr = true,
            desc = "Double escape to normal mode",
          },
        },
      },
    }
<


MODULE                                  *snacks.nvim-terminal-terminal-module*

>lua
    ---@class snacks.terminal: snacks.win
    ---@field cmd? string | string[]
    ---@field opts snacks.terminal.Config
    Snacks.terminal = {}
<


SNACKS.TERMINAL() ~

>lua
    ---@type fun(cmd?: string|string[], opts?: snacks.terminal.Config): snacks.terminal
    Snacks.terminal()
<


SNACKS.TERMINAL.OPEN() ~

>lua
    ---@param cmd? string | string[]
    ---@param opts? snacks.terminal.Config
    Snacks.terminal.open(cmd, opts)
<


SNACKS.TERMINAL.TOGGLE() ~

>lua
    ---@param cmd? string | string[]
    ---@param opts? snacks.terminal.Config
    Snacks.terminal.toggle(cmd, opts)
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
